#!/usr/bin/env bash

set -e

BUILD_DIR=$1
ENV_DIR=$3
BIN_DIR=$(cd $(dirname $0); pwd)

source "$BIN_DIR/support/functions"

cd "$BUILD_DIR"

DATABASE_NAME=heroku_review_${SOURCE_VERSION}
DATABASE_URL=$(cat $ENV_DIR/DATABASE_URL | sed -e s/__DATABASE_NAME__/$DATABASE_NAME/)

echo "Create: tmp/buildpack-review-apps-aws-rds-release-step.yml" | arrow
cat <<EOF >"$BUILD_DIR/tmp/buildpack-review-apps-aws-rds-release-step.yml"
---
config_vars:
  DATABASE_NAME: $DATABASE_NAME
  DATABASE_URL: $DATABASE_URL
EOF
cat $BUILD_DIR/tmp/buildpack-review-apps-aws-rds-release-step.yml | indent

echo "Copy: 'config/database.reviewapps.yml' -> 'config/database.yml'" | arrow
cp -v config/database.reviewapps.yml config/database.yml | indent

# Heroku Stack 22 が適用されるプロジェクトだと Ruby がシステムインストールされていないので失敗する
# https://devcenter.heroku.com/ja/articles/heroku-22-stack
# こちらの PR を参考に Ruby をセットアップする
# https://github.com/heroku/heroku-buildpack-nginx/pull/103/files
#
# The ERB templating feature requires a Ruby install at runtime, for the `erb` command.
# As of Heroku-22, there is no system Ruby installation in the stack image, so if the
# app doesn't already have the Ruby buildpack set before this one, we have to vendor
# our own copy of Ruby and ensure it's on PATH at runtime.
if ! command -v erb &> /dev/null; then
  echo "-----> buildpack: An existing Ruby installation was not found (required for erb template support)"
  ruby_version="3.1.2"
  ruby_url="https://heroku-buildpack-ruby.s3.us-east-1.amazonaws.com/${STACK}/ruby-${ruby_version}.tgz"
  vendored_ruby_dir=".heroku-buildpack-review-apps-aws-rds/ruby"
  mkdir -p "${BUILD_DIR}/${vendored_ruby_dir}"

  if ! curl --silent --show-error --fail --retry 3 --retry-connrefused --connect-timeout 5 "${ruby_url}" | tar -zxC "${BUILD_DIR}/${vendored_ruby_dir}"; then
    echo "     ! Failed to download Ruby from '${ruby_url}'" >&2
    exit 1
  fi

  mkdir -p "${BUILD_DIR}/.profile.d"
  # Deliberately pick the same profile.d script filepath as the Ruby buildpack,
  # so if the Ruby buildpack comes after this one, it will overwrite this script.
  echo "export PATH=\"\${HOME}/${vendored_ruby_dir}/bin:\${PATH}\"" > "${BUILD_DIR}/.profile.d/ruby.sh"

  echo "-----> buildpack: Installed Ruby ${ruby_version}"
fi